// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: travelNetworking/gRPC/travel.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace generatedcode {
  public static partial class ITravelServicesProto
  {
    static readonly string __ServiceName = "ITravelServicesProto";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::generatedcode.Employee> __Marshaller_Employee = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::generatedcode.Employee.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::generatedcode.TravelResponse> __Marshaller_TravelResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::generatedcode.TravelResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::generatedcode.FlightDestDepDTO> __Marshaller_FlightDestDepDTO = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::generatedcode.FlightDestDepDTO.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::generatedcode.Flight> __Marshaller_Flight = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::generatedcode.Flight.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::generatedcode.TravelRequest> __Marshaller_TravelRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::generatedcode.TravelRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::generatedcode.Ticket> __Marshaller_Ticket = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::generatedcode.Ticket.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::generatedcode.Employee, global::generatedcode.TravelResponse> __Method_Login = new grpc::Method<global::generatedcode.Employee, global::generatedcode.TravelResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Login",
        __Marshaller_Employee,
        __Marshaller_TravelResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::generatedcode.Employee, global::generatedcode.TravelResponse> __Method_Logout = new grpc::Method<global::generatedcode.Employee, global::generatedcode.TravelResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Logout",
        __Marshaller_Employee,
        __Marshaller_TravelResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::generatedcode.FlightDestDepDTO, global::generatedcode.Flight> __Method_FilterFlightsByDestinationAndDeparture = new grpc::Method<global::generatedcode.FlightDestDepDTO, global::generatedcode.Flight>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "FilterFlightsByDestinationAndDeparture",
        __Marshaller_FlightDestDepDTO,
        __Marshaller_Flight);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::generatedcode.TravelRequest, global::generatedcode.Flight> __Method_FilterFlightByAvailableSeats = new grpc::Method<global::generatedcode.TravelRequest, global::generatedcode.Flight>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "FilterFlightByAvailableSeats",
        __Marshaller_TravelRequest,
        __Marshaller_Flight);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::generatedcode.Ticket, global::generatedcode.Ticket> __Method_AddTicket = new grpc::Method<global::generatedcode.Ticket, global::generatedcode.Ticket>(
        grpc::MethodType.DuplexStreaming,
        __ServiceName,
        "AddTicket",
        __Marshaller_Ticket,
        __Marshaller_Ticket);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::generatedcode.Flight, global::generatedcode.TravelResponse> __Method_AddFlight = new grpc::Method<global::generatedcode.Flight, global::generatedcode.TravelResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddFlight",
        __Marshaller_Flight,
        __Marshaller_TravelResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::generatedcode.TravelReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of ITravelServicesProto</summary>
    [grpc::BindServiceMethod(typeof(ITravelServicesProto), "BindService")]
    public abstract partial class ITravelServicesProtoBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::generatedcode.TravelResponse> Login(global::generatedcode.Employee request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::generatedcode.TravelResponse> Logout(global::generatedcode.Employee request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task FilterFlightsByDestinationAndDeparture(global::generatedcode.FlightDestDepDTO request, grpc::IServerStreamWriter<global::generatedcode.Flight> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task FilterFlightByAvailableSeats(global::generatedcode.TravelRequest request, grpc::IServerStreamWriter<global::generatedcode.Flight> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task AddTicket(grpc::IAsyncStreamReader<global::generatedcode.Ticket> requestStream, grpc::IServerStreamWriter<global::generatedcode.Ticket> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::generatedcode.TravelResponse> AddFlight(global::generatedcode.Flight request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for ITravelServicesProto</summary>
    public partial class ITravelServicesProtoClient : grpc::ClientBase<ITravelServicesProtoClient>
    {
      /// <summary>Creates a new client for ITravelServicesProto</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ITravelServicesProtoClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for ITravelServicesProto that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ITravelServicesProtoClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ITravelServicesProtoClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ITravelServicesProtoClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::generatedcode.TravelResponse Login(global::generatedcode.Employee request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Login(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::generatedcode.TravelResponse Login(global::generatedcode.Employee request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Login, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::generatedcode.TravelResponse> LoginAsync(global::generatedcode.Employee request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LoginAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::generatedcode.TravelResponse> LoginAsync(global::generatedcode.Employee request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Login, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::generatedcode.TravelResponse Logout(global::generatedcode.Employee request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Logout(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::generatedcode.TravelResponse Logout(global::generatedcode.Employee request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Logout, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::generatedcode.TravelResponse> LogoutAsync(global::generatedcode.Employee request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LogoutAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::generatedcode.TravelResponse> LogoutAsync(global::generatedcode.Employee request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Logout, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::generatedcode.Flight> FilterFlightsByDestinationAndDeparture(global::generatedcode.FlightDestDepDTO request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return FilterFlightsByDestinationAndDeparture(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::generatedcode.Flight> FilterFlightsByDestinationAndDeparture(global::generatedcode.FlightDestDepDTO request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_FilterFlightsByDestinationAndDeparture, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::generatedcode.Flight> FilterFlightByAvailableSeats(global::generatedcode.TravelRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return FilterFlightByAvailableSeats(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::generatedcode.Flight> FilterFlightByAvailableSeats(global::generatedcode.TravelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_FilterFlightByAvailableSeats, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncDuplexStreamingCall<global::generatedcode.Ticket, global::generatedcode.Ticket> AddTicket(grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddTicket(new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncDuplexStreamingCall<global::generatedcode.Ticket, global::generatedcode.Ticket> AddTicket(grpc::CallOptions options)
      {
        return CallInvoker.AsyncDuplexStreamingCall(__Method_AddTicket, null, options);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::generatedcode.TravelResponse AddFlight(global::generatedcode.Flight request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddFlight(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::generatedcode.TravelResponse AddFlight(global::generatedcode.Flight request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddFlight, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::generatedcode.TravelResponse> AddFlightAsync(global::generatedcode.Flight request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddFlightAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::generatedcode.TravelResponse> AddFlightAsync(global::generatedcode.Flight request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddFlight, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override ITravelServicesProtoClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ITravelServicesProtoClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(ITravelServicesProtoBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Login, serviceImpl.Login)
          .AddMethod(__Method_Logout, serviceImpl.Logout)
          .AddMethod(__Method_FilterFlightsByDestinationAndDeparture, serviceImpl.FilterFlightsByDestinationAndDeparture)
          .AddMethod(__Method_FilterFlightByAvailableSeats, serviceImpl.FilterFlightByAvailableSeats)
          .AddMethod(__Method_AddTicket, serviceImpl.AddTicket)
          .AddMethod(__Method_AddFlight, serviceImpl.AddFlight).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, ITravelServicesProtoBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_Login, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::generatedcode.Employee, global::generatedcode.TravelResponse>(serviceImpl.Login));
      serviceBinder.AddMethod(__Method_Logout, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::generatedcode.Employee, global::generatedcode.TravelResponse>(serviceImpl.Logout));
      serviceBinder.AddMethod(__Method_FilterFlightsByDestinationAndDeparture, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::generatedcode.FlightDestDepDTO, global::generatedcode.Flight>(serviceImpl.FilterFlightsByDestinationAndDeparture));
      serviceBinder.AddMethod(__Method_FilterFlightByAvailableSeats, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::generatedcode.TravelRequest, global::generatedcode.Flight>(serviceImpl.FilterFlightByAvailableSeats));
      serviceBinder.AddMethod(__Method_AddTicket, serviceImpl == null ? null : new grpc::DuplexStreamingServerMethod<global::generatedcode.Ticket, global::generatedcode.Ticket>(serviceImpl.AddTicket));
      serviceBinder.AddMethod(__Method_AddFlight, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::generatedcode.Flight, global::generatedcode.TravelResponse>(serviceImpl.AddFlight));
    }

  }
}
#endregion
